// Created by Brian 'Snake' Alexander, 2015
#include "UnrealTournament.h"
#include "UTDomGameMode.h"
#include "Net/UnrealNetwork.h"
#include "UTGameObjective.h"
#include "DominationObjective.h"

ADEPRECATED_DominationObjective::ADEPRECATED_DominationObjective(const FObjectInitializer& ObjectInitializer)
	: Super(ObjectInitializer)
{
	static ConstructorHelpers::FObjectFinder<UStaticMesh> ControlPoint4Mesh(TEXT("StaticMesh'/Game/RestrictedAssets/UTDomGameContent/Meshes/DomX.DomX'"));
	EditorMesh = ObjectInitializer.CreateDefaultSubobject<UStaticMeshComponent>(this, FName(TEXT("DomEditorMesh")));
	EditorMesh->AttachParent = RootComponent;
	EditorMesh->SetStaticMesh(ControlPoint4Mesh.Object);
	EditorMesh->SetCollisionEnabled(ECollisionEnabled::NoCollision);
	EditorMesh->SetCollisionProfileName(FName(TEXT("NoCollision")));
	EditorMesh->SetRelativeLocation(FVector(0.0f, 0.0f, 20.0f));
	EditorMesh->SetHiddenInGame(true);

	DomLight = ObjectInitializer.CreateDefaultSubobject<UPointLightComponent>(this, FName(TEXT("DomEditorLight")));
	DomLight->AttachParent = RootComponent;
	DomLight->SetAttenuationRadius(900.0f);
	DomLight->bUseInverseSquaredFalloff = false;
	DomLight->SetAffectDynamicIndirectLighting(true);
	DomLight->SetIntensity(10.0f);
	DomLight->RelativeLocation = FVector(0.0f, 0.0f, 90.0f);
	DomLight->SetLightColor(FLinearColor::Gray);
	DomLight->bHiddenInGame = true;

	static ConstructorHelpers::FObjectFinder<USoundBase> CaptureSound(TEXT("SoundCue'/Game/RestrictedAssets/UTDomGameContent/Sounds/ControlSound_Cue.ControlSound_Cue'"));
	ControlPointCaptureSound = CaptureSound.Object;

	bAutogenerateDefensePoints = false;
	SetReplicates(true);
	bAlwaysRelevant = false;
	NetPriority = 1.0;

	SetActorHiddenInGame(true);
}

void ADEPRECATED_DominationObjective::GetLifetimeReplicatedProps(TArray< FLifetimeProperty > & OutLifetimeProps) const
{
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
}

void ADEPRECATED_DominationObjective::InitializeObjective()
{
	CreateCarriedObject();
}

void ADEPRECATED_DominationObjective::CreateCarriedObject()
{
	if (DomLight)
	{
		DomLight->SetAttenuationRadius(0.0f);
		DomLight->SetIntensity(0.0f);
		DomLight->SetVisibility(false);
		DomLight->SetActive(false);
	}
	if (EditorMesh)
	{
		EditorMesh->SetHiddenInGame(true);
		EditorMesh->SetVisibility(false);
	}
}

int32 ADEPRECATED_DominationObjective::GetControllingTeamNum()
{
	return 255;
}

AUTPlayerState* ADEPRECATED_DominationObjective::GetControlPointHolder()
{
	return NULL;
}

AUTPlayerState* ADEPRECATED_DominationObjective::GetCarriedObjectHolder()
{
	return CarriedObjectHolder;
}

FString ADEPRECATED_DominationObjective::GetPointName()
{
	return (PointName.IsEmpty()) ? TEXT("ControlPoint") : PointName;
}
